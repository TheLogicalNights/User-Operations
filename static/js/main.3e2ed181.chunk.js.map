{"version":3,"sources":["components/ui/Card.js","components/ui/Button.js","components/ui/ErrorModal.js","components/user/AddUserForm.js","components/user/UsersList.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","Button","type","onClick","ErrorModal","title","message","AddUserForm","useState","enteredUserName","setUserName","enteredAge","setAge","isValidUsername","setValidityOfUsername","isValidAge","setValidityOfAge","error","setError","onSubmit","event","preventDefault","trim","length","onAddUser","htmlFor","id","onChange","target","value","UsersList","users","map","user","name","age","App","usersList","setUsersList","username","prevUsersList","Math","round","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2ed181.chunk.js","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className={`card ${props.className}`}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./Button.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={`button ${props.className}`}\n      type={props.type || \"Button\"}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import \"./ErrorModal.css\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nconst ErrorModal = (props) => {\n  return (\n    <div>\n      <div className=\"backdrop\" onClick={props.onClick} />\n      <Card className=\"modal\">\n        <header className=\"header\">\n          <h2>{props.title}</h2>\n        </header>\n        <div className=\"content\">\n          <p>{props.message}</p>\n        </div>\n        <footer className=\"actions\">\n          <Button onClick={props.onClick}>Okay</Button>\n        </footer>\n      </Card>\n    </div>\n  );\n};\n\nexport default ErrorModal;\n","import \"./AddUserForm.css\";\nimport Card from \"../ui/Card\";\nimport Button from \"../ui/Button\";\nimport \"../ui/Button.css\";\nimport { useState } from \"react\";\nimport ErrorModal from \"../ui/ErrorModal\";\n\nconst AddUserForm = (props) => {\n  const [enteredUserName, setUserName] = useState(\"\");\n  const [enteredAge, setAge] = useState(\"\");\n  const [isValidUsername, setValidityOfUsername] = useState(true);\n  const [isValidAge, setValidityOfAge] = useState(true);\n  const [error, setError] = useState();\n\n  const usernameChangedHandler = (event) => {\n    setValidityOfUsername(true);\n    setUserName(event.target.value);\n  };\n\n  const ageChangedHandler = (event) => {\n    setValidityOfAge(true);\n    setAge(event.target.value);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    if (enteredUserName.trim().length === 0) {\n      setValidityOfUsername(false);\n      setError({\n        title: \"Invalid Username\",\n        message: \"Please Enter a valid username (Non empty value)\",\n      });\n      return;\n    }\n    if (enteredAge.trim().length === 0) {\n      setValidityOfAge(false);\n      setError({\n        title: \"Invalid Age\",\n        message: \"Please Enter a valid age (Non empty value)\",\n      });\n      return;\n    }\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid Age\",\n        message: \"Please Enter a valid age (Greater than 0)\",\n      });\n      return;\n    }\n    setUserName(\"\");\n    setAge(\"\");\n    props.onAddUser(enteredUserName, enteredAge);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <div>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onClick={errorHandler}\n        />\n      )}\n      <Card className={`${\"input\"}`}>\n        <form onSubmit={onSubmitHandler}>\n          <label\n            htmlFor=\"username\"\n            className={`${isValidUsername ? \"\" : \"invalid\"}`}\n          >\n            Username\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            onChange={usernameChangedHandler}\n            value={enteredUserName}\n          />\n          <label\n            htmlFor=\"age (Years)\"\n            className={`${isValidAge ? \"\" : \"invalid\"}`}\n          >\n            Age\n          </label>\n          <input\n            type=\"number\"\n            id=\"age\"\n            className={`${isValidAge ? \"\" : \"invalid\"}`}\n            onChange={ageChangedHandler}\n            value={enteredAge}\n          />\n          <Button className=\"button\" type=\"submit\">\n            Add User\n          </Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddUserForm;\n","import \"./UsersList.css\";\nimport Card from \"../ui/Card\";\n\nconst UsersList = (props) => {\n  return (\n    <Card className=\"users\">\n      <ul>\n        {props.users.map((user) => (\n          <li key={user.id}>\n            {user.name} ({user.age} years old)\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default UsersList;\n","import \"./App.css\";\nimport AddUserForm from \"./components/user/AddUserForm\";\nimport UsersList from \"./components/user/UsersList\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (username, age) => {\n    setUsersList((prevUsersList) => {\n      return [\n        ...prevUsersList,\n        { id: Math.round(Math.random() * 1000000), name: username, age: age },\n      ];\n    });\n  };\n  return (\n    <div>\n      <AddUserForm onAddUser={addUserHandler} />\n      <UsersList users={usersList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}